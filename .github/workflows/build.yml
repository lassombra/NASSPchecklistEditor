name: Build Qt Project

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Qt
      uses: jurplel/install-qt-action@v4.1.1
      with:
        version: 6.8.2
        
    - name: Setup Cpp (C++ / C)
      # You may pin to the exact commit or the version.
      # uses: aminya/setup-cpp@290824452986e378826155f3379d31bce8753d76
      uses: aminya/setup-cpp@v0.37.0
      with:
        compiler: msvc
        architecture: x64
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    - name: Configure using CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build
      run: cmake --build build --config Release
      
    - name: Run tests
      run: ctest --output-on-failure

    - name: Assemble output package
      run: mkdir D:\a\NASSPChecklistEditor\package && copy D:\a\NASSPChecklistEditor\NasspChecklistEditor\build\Release\ChecklistEditor.exe D:\a\NASSPChecklistEditor\package\

    - name: Bundle QT packages
      run: D:\a\NASSPchecklistEditor\Qt\6.8.2\msvc2022_64\bin\windeployqt.exe D:\a\NASSPChecklistEditor\package\ChecklistEditor.exe

    - name: Upload build artifact
      uses: actions/upload-artifact@v4.6.1
      with:
        name: editor
        path: D:\a\NASSPchecklistEditor\package\
  release:
    if: ${{ github.event.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      contents: write

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4.1.9
      with:
        name: editor
        path: /home/runner/work/NASSPchecklistEditor/NASSPchecklistEditor
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_id }}
        release_name: Release ${{ github.run_id }}
        draft: true
        prerelease: true
    - name: Zip the artifact folder
      id: zip
      run: zip -r /home/runner/work/NASSPchecklistEditor/editor.zip /home/runner/work/NASSPchecklistEditor/NASSPchecklistEditor
  
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: editor.zip  # Adjust the name based on your artifact
        asset_content_type: application/zip
        asset_path: /home/runner/work/NASSPchecklistEditor/editor.zip
